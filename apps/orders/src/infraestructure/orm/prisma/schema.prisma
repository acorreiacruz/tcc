generator client {
  provider = "prisma-client-js"
  output   = "./prisma-client/"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://root:root12345@localhost:5432/tcc?schema=order"
}

model Order {
  orderId           String      @id @map("id") @db.Uuid
  createdAt         DateTime    @default(now()) @map("created_at")
  updatedAt         DateTime    @default(now()) @updatedAt @map("updated_at")
  userId            String      @map("user_id") @db.Uuid
  orderDate         DateTime    @map("order_date")
  fulfillmentMethod String      @map("fulfillment_method")
  paymentMethod     String      @map("payment_method")
  total             Float
  status            String
  orderItems        OrderItem[]

  @@map("order")
}

model Item {
  itemId      String      @id @map("id") @db.Uuid
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @default(now()) @updatedAt @map("updated_at")
  name        String      @db.VarChar(150)
  description String      @db.VarChar(300)
  price       Float
  orderItems  OrderItem[]

  @@map("item")
}

model OrderItem {
  price    Float
  quantity Int
  itemId   String @map("item_id") @db.Uuid
  orderId  String @map("order_id") @db.Uuid
  item     Item   @relation(fields: [itemId], references: [itemId], onDelete: Cascade)
  order    Order  @relation(fields: [orderId], references: [orderId], onDelete: Cascade)

  @@id([orderId, itemId])
  @@map("order_item")
}

model OrderOutbox {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  eventId   String   @unique @map("event_id") @db.Uuid
  eventName String   @map("event_name")
  status    String
  event     String

  @@map("order_outbox")
}
