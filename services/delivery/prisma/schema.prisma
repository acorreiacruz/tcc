generator client {
  provider = "prisma-client-js"
  output   = env("DELIVERY_PRISMA_CLIENT")
}

datasource db {
  provider = "postgresql"
  url      = env("DELIVERY_POSTGRES_URL")
}

model DeliveryPerson {
  id               String    @id @db.Uuid
  fullName         String
  email            String    @unique
  phoneNumber      String    @unique
  passwordHash     String 
  status           String
  currentLocation DeliveryPersonLocation?
  delivery Delivery []
  @@index([phoneNumber])
  @@map("delivery_person")
}

model DeliveryPersonLocation {
  id        String    @id @db.Uuid @default(uuid())
  latitude  Float
  longitude Float
  deliveryPersonId String @db.Uuid @unique
  deliveryPerson DeliveryPerson? @relation(fields: [deliveryPersonId], references: [id], onDelete: Cascade)
  @@map("delivery_person_location")
}

model Delivery {
  id               String            @id @db.Uuid
  orderId          String            @unique    
  status           String
  attempts         Int
  startedAt        DateTime?
  concludedAt      DateTime?
  deliveryPersonId String?           @db.Uuid
  deliveryPerson   DeliveryPerson?   @relation(fields: [deliveryPersonId], references: [id], onDelete: Cascade)
  location         DeliveryLocation  @relation(fields: [locationId], references: [id])
  locationId       String            @unique @db.Uuid

  @@index([orderId])
  @@map("delivery")
}

model DeliveryLocation {
  id        String     @id @db.Uuid @default(uuid())
  latitude  Float
  longitude Float
  delivery  Delivery?
  @@map("delivery_location")
}



model DeliveryOutbox {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  eventId   String   @unique @db.Uuid
  eventName String
  status    String
  event     String
  @@map("delivery_outbox")
}